// –ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
import { STATE } from "./config.js"
import { telegramManager } from "./telegram.js"
import { apiManager } from "./api.js"
import { tonConnectManager } from "./ton-connect.js"
import { gameManager } from "./game.js"
import { paymentManager } from "./payments.js"
import { showNotification, showConnectionStatus, renderCases, updateFanticsDisplay } from "./ui.js"

class App {
  constructor() {
    this.init()
  }

  async init() {
    try {
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –µ—Å–ª–∏ –Ω–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
      if (!telegramManager.isAuthAvailable()) {
        showNotification("‚ö†Ô∏è –î–ª—è –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –æ—Ç–∫—Ä–æ–π—Ç–µ –≤ Telegram", "info", 8000)
      } else {
        showNotification("‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ", "success", 2000)
      }

      // –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
      if (window.location.search.includes("debug=true")) {
        const connectionOk = await apiManager.testConnection()
        showConnectionStatus(
          connectionOk ? "‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å —Å–µ—Ä–≤–µ—Ä–æ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ" : "‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º",
          !connectionOk,
        )
      }

      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º TON Connect
      await tonConnectManager.init()

      // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
      await this.loadInitialData()

      // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
      this.setupEventListeners()

      console.log("‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ")
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:", error)
      showNotification("‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è", "error", 5000)
    }
  }

  async loadInitialData() {
    try {
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const fantics = await apiManager.fetchUserFantics()
      if (fantics !== null) {
        updateFanticsDisplay()
      }

      // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–µ–π—Å—ã
      const cases = await apiManager.fetchCases()
      if (cases) {
        renderCases(cases, (caseData) => gameManager.openCasePage(caseData))
      }
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:", error)
      showNotification("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö", "error", 5000)
    }
  }

  setupEventListeners() {
    // –ö–Ω–æ–ø–∫–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
   document.getElementById("depositBtn")?.addEventListener("click", () => {
  console.log("üîÑ –û—Ç–∫—Ä—ã—Ç–∏–µ Topup Modal –≤–º–µ—Å—Ç–æ Deposit Modal")
  paymentManager.openTopupModal()
})

    // –ö–Ω–æ–ø–∫–∞ —Ç–æ–ø–∞–ø–∞
    document.getElementById("topupBtn")?.addEventListener("click", () => {
      paymentManager.openTopupModal()
    })

    // –ö–Ω–æ–ø–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è TON –∫–æ—à–µ–ª—å–∫–∞
    document.getElementById("connectTonWalletBtn")?.addEventListener("click", async () => {
      if (STATE.tonConnectUI && !STATE.walletData) {
        try {
          await STATE.tonConnectUI.connectWallet()
        } catch (error) {
          console.error("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫–æ—à–µ–ª—å–∫–∞:", error)
          showNotification("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫–æ—à–µ–ª—å–∫–∞", "error")
        }
      }
    })

    // –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ TON Connect (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
    if (window.location.search.includes("debug=true")) {
      const testBtn = document.createElement("button")
      testBtn.textContent = "üß™ –¢–µ—Å—Ç TON Connect"
      testBtn.className = "fixed bottom-4 left-4 bg-blue-500 text-white px-4 py-2 rounded z-50"
      testBtn.addEventListener("click", () => this.testTonConnectDebug())
      document.body.appendChild(testBtn)
    }

    // –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    window.addEventListener("beforeunload", () => this.cleanup())
  }

  testTonConnectDebug() {
    console.log("üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ TON Connect...")

    console.log(`üìö TON_CONNECT_UI –¥–æ—Å—Ç—É–ø–µ–Ω: ${typeof TON_CONNECT_UI !== "undefined"}`)

    if (typeof TON_CONNECT_UI === "undefined") {
      console.log("‚ùå TON_CONNECT_UI –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω")
      return
    }

    console.log("‚úÖ TON_CONNECT_UI –∑–∞–≥—Ä—É–∂–µ–Ω")

    const manifestUrl = window.location.origin + "/tonconnect-manifest.json"
    console.log(`üìÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º manifest: ${manifestUrl}`)

    fetch(manifestUrl)
      .then((response) => {
        console.log(`üìÑ Manifest —Å—Ç–∞—Ç—É—Å: ${response.status}`)
        if (response.ok) {
          console.log("‚úÖ Manifest –¥–æ—Å—Ç—É–ø–µ–Ω")
          return response.json()
        } else {
          console.log("‚ùå Manifest –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
          throw new Error("Manifest –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        }
      })
      .then((manifest) => {
        console.log(`üìÑ Manifest –∑–∞–≥—Ä—É–∂–µ–Ω: ${manifest.name}`)

        try {
          const testUI = new TON_CONNECT_UI.TonConnectUI({
            manifestUrl: manifestUrl,
            buttonRootId: "ton-connect-ui",
          })
          console.log("‚úÖ TON Connect UI –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        } catch (error) {
          console.log(`‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: ${error.message}`)
        }
      })
      .catch((error) => {
        console.log(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`)
      })
  }

  cleanup() {
    // –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
    console.log("üßπ –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
  }
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
document.addEventListener("DOMContentLoaded", () => {
  new App()
})

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
window.App = App
