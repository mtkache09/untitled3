/* –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Å—Ç–∏–ª–∏ –±–µ–∑ –ø–æ–¥—Å–≤–µ—á–∏–≤–∞–Ω–∏—è –ø—Ä–∏–∑–æ–≤ */

/* –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ */
#prizeScroll {
  scroll-behavior: auto;
  overflow-x: auto;
  scrollbar-width: none;
  -ms-overflow-style: none;
}

#prizeScroll::-webkit-scrollbar {
  display: none;
}

/* –ë–∞–∑–æ–≤—ã–µ –ø–µ—Ä–µ—Ö–æ–¥—ã –¥–ª—è –ø—Ä–∏–∑–æ–≤ (–±–µ–∑ –ø–æ–¥—Å–≤–µ—á–∏–≤–∞–Ω–∏—è) */
#prizeScroll > div {
  transition: transform 0.3s ease;
}

/* –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è –ø—Ä–∏–∑–æ–≤ */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

#possiblePrizes > div {
  animation: fadeInUp 0.5s ease forwards;
  opacity: 0;
}

/* –£–ª—É—á—à–µ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ */
.btn-disabled {
  opacity: 0.5;
  cursor: not-allowed;
  transform: none !important;
}

.btn-pulse {
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

@keyframes pulse {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

/* –ê–Ω–∏–º–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ */
.loading-spinner {
  border: 4px solid #f3f3f3;
  border-top: 4px solid #3498db;
  border-radius: 50%;
  width: 40px;
  height: 40px;
  animation: spin 2s linear infinite;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

/* –£–ª—É—á—à–µ–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è */
.notification-enter {
  transform: translateX(100%);
  opacity: 0;
}

.notification-enter-active {
  transform: translateX(0);
  opacity: 1;
  transition: all 0.3s ease;
}

.notification-exit {
  transform: translateX(0);
  opacity: 1;
}

.notification-exit-active {
  transform: translateX(100%);
  opacity: 0;
  transition: all 0.3s ease;
}

/* –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å */
@media (max-width: 768px) {
  #prizeScroll > div {
    width: 120px;
    height: 120px;
  }
}

/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É–ª—É—á—à–µ–Ω–∏—è */
.case-card:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
}

.prize-card {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.prize-card:hover {
  transform: translateY(-2px) scale(1.02);
}

/* –ê–Ω–∏–º–∞—Ü–∏—è –¥–ª—è –∫–Ω–æ–ø–æ–∫ */
.btn-animate {
  transition: all 0.2s ease;
}

.btn-animate:hover:not(:disabled) {
  transform: translateY(-1px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
}

.btn-animate:active:not(:disabled) {
  transform: translateY(0);
}

/* –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ TON Connect */
#ton-connect-ui {
  display: flex;
  justify-content: center;
  align-items: center;
}

–í–æ—Ç –ø–æ—à–∞–≥–æ–≤–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è, —á—Ç–æ –∏–º–µ–Ω–Ω–æ –Ω—É–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –≤ –≤–∞—à–µ–º –∫–æ–¥–µ:

## –®–∞–≥ 1: –ó–∞–º–µ–Ω–∏—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ ui.js

**–ü–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–º–µ–Ω–∏—Ç–µ** –≤–µ—Å—å –∫–æ–¥ –≤ –≤–∞—à–µ–º —Ñ–∞–π–ª–µ `ui.js` –Ω–∞ —ç—Ç–æ—Ç:

```javascript
// –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –º–æ–¥—É–ª—å UI —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∏–∫–æ–Ω–æ–∫ –∫–µ–π—Å–æ–≤
import { CONFIG, STATE } from "./config.js"

export function debugLog(message) {
  console.log(message)
  const debugLog = document.getElementById("debugLog")
  if (debugLog) {
    const timestamp = new Date().toLocaleTimeString()
    debugLog.innerHTML += `<div>[${timestamp}] ${message}</div>`
    debugLog.scrollTop = debugLog.scrollHeight
  }
}

export function showNotification(message, type = "info", duration = CONFIG.ANIMATION.NOTIFICATION_DURATION) {
  const notification = document.createElement("div")
  notification.className = `fixed top-4 right-4 z-50 px-4 py-3 rounded-lg shadow-lg max-w-sm transform transition-all duration-300 translate-x-full`

  const typeClasses = {
    success: "bg-green-500 text-white",
    error: "bg-red-500 text-white",
    warning: "bg-yellow-500 text-white",
    info: "bg-blue-500 text-white",
  }

  notification.className += ` ${typeClasses[type] || typeClasses.info}`
  notification.textContent = message
  document.body.appendChild(notification)

  // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
  setTimeout(() => {
    notification.classList.remove("translate-x-full")
  }, 100)

  // –ê–Ω–∏–º–∞—Ü–∏—è –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è
  setTimeout(() => {
    notification.classList.add("translate-x-full")
    setTimeout(() => {
      if (notification.parentNode) {
        notification.parentNode.removeChild(notification)
      }
    }, 300)
  }, duration)
}

export function showConnectionStatus(message, isError = false) {
  const statusDiv = document.getElementById("connectionStatus")
  const statusText = document.getElementById("statusText")

  if (statusDiv && statusText) {
    statusDiv.classList.remove("hidden")
    statusText.textContent = message

    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–ª–∞—Å—Å—ã —Å—Ç–∞—Ç—É—Å–∞
    statusDiv.className = statusDiv.className.replace(/bg-(red|green|blue)-500/g, "")

    const statusClass = isError ? "bg-red-500" : "bg-green-500"
    statusDiv.className += ` ${statusClass}`
  }
}

export function updateFanticsDisplay() {
  const userStarsElements = document.querySelectorAll("#userStars, #userStarsCase, #modalUserStars")
  userStarsElements.forEach((element) => {
    if (element) {
      element.textContent = STATE.userFantics
    }
  })
}

export function renderCases(cases, onCaseSelect) {
  const casesGrid = document.getElementById("casesGrid")
  if (!casesGrid) return

  casesGrid.innerHTML = ""

  cases.forEach((caseData) => {
    const caseElement = document.createElement("div")
    caseElement.className =
      "bg-gradient-to-br from-purple-600 to-purple-800 rounded-lg p-4 text-white shadow-lg border border-purple-500/30 cursor-pointer hover:from-purple-700 hover:to-purple-900 transition-all transform hover:scale-105"

    // –°–æ–∑–¥–∞–µ–º HTML —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –≤–º–µ—Å—Ç–æ —ç–º–æ–¥–∑–∏
    caseElement.innerHTML = `
      <div class="text-center">
        <div class="mb-2 flex justify-center">
          <img src="${caseData.iconUrl || "images/starter-case-icon.png"}" 
               alt="${caseData.name}" 
               class="w-12 h-12 object-contain"
               onerror="this.style.display='none'; this.nextElementSibling.style.display='block';">
          <div class="text-4xl hidden">üì¶</div>
        </div>
        <h3 class="font-bold text-lg mb-2">${caseData.name}</h3>
        <div class="flex items-center justify-center gap-2">
          <span class="text-purple-300">${caseData.cost}</span>
          <span class="text-xl">üíé</span>
        </div>
      </div>
    `

    caseElement.addEventListener("click", () => onCaseSelect(caseData))
    casesGrid.appendChild(caseElement)
  })
}

export function renderPossiblePrizes(caseData) {
  const possiblePrizes = document.getElementById("possiblePrizes")
  if (!possiblePrizes) return

  // –ê–¥–∞–ø—Ç–∏—Ä—É–µ–º—Å—è –ø–æ–¥ —Å–µ—Ä–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö
  let prizes = []

  // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º possible_prizes (–µ—Å–ª–∏ –µ—Å—Ç—å)
  if (caseData.possible_prizes && caseData.possible_prizes.length) {
    prizes = caseData.possible_prizes
  }
  // –ó–∞—Ç–µ–º –ø—Ä–æ–±—É–µ–º presents (—Å–µ—Ä–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç)
  else if (caseData.presents && caseData.presents.length) {
    prizes = caseData.presents.map((present) => ({
      name: `${present.cost} —Ñ–∞–Ω—Ç–∏–∫–æ–≤`,
      cost: present.cost,
      icon: "üíé",
      probability: present.probability || 10,
      chance: present.probability || 10,
    }))
  }
  // –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ—Ç, –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –±–∞–∑–æ–≤—ã–µ –ø—Ä–∏–∑—ã
  else {
    prizes = generateDefaultPrizesForDisplay(caseData.cost)
  }

  if (!prizes.length) return

  possiblePrizes.innerHTML = ""

  prizes.forEach((prize, index) => {
    const prizeElement = document.createElement("div")

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø—Ä–∏–∑–∞
    let bgGradient = "from-green-600 to-green-800" // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∑–µ–ª–µ–Ω—ã–π

    if (prize.cost >= 2000) {
      bgGradient = "from-yellow-600 to-yellow-800" // –ó–æ–ª–æ—Ç–æ–π –¥–ª—è –æ—á–µ–Ω—å –¥–æ—Ä–æ–≥–∏—Ö
    } else if (prize.cost >= 1000) {
      bgGradient = "from-purple-600 to-purple-800" // –§–∏–æ–ª–µ—Ç–æ–≤—ã–π –¥–ª—è –¥–æ—Ä–æ–≥–∏—Ö
    } else if (prize.cost >= 200) {
      bgGradient = "from-blue-600 to-blue-800" // –°–∏–Ω–∏–π –¥–ª—è —Å—Ä–µ–¥–Ω–∏—Ö
    }

    prizeElement.className = `bg-gradient-to-br ${bgGradient} rounded-lg p-3 text-white text-center shadow-lg border border-purple-500/30 hover:scale-105 transition-all duration-300`

    // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —à–∞–Ω—Å–∞
    const chance = prize.chance || prize.probability || 0
    const chanceText = chance > 0 ? `${chance}%` : "–†–µ–¥–∫–∏–π"

    prizeElement.innerHTML = `
      <div class="text-2xl mb-1">${prize.icon || "üíé"}</div>
      <div class="text-xs font-semibold">${prize.name || `${prize.cost} —Ñ–∞–Ω—Ç–∏–∫–æ–≤`}</div>
      <div class="text-xs text-gray-300 mt-1">${chanceText}</div>
    `

    // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –∞–Ω–∏–º–∞—Ü–∏–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–∑–∞
    prizeElement.style.animationDelay = `${index * 0.1}s`

    possiblePrizes.appendChild(prizeElement)
  })
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–∏–∑–æ–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
function generateDefaultPrizesForDisplay(caseCost) {
  if (caseCost <= 100) {
    return [
      { name: "50 —Ñ–∞–Ω—Ç–∏–∫–æ–≤", cost: 50, icon: "üíé", chance: 40 },
      { name: "100 —Ñ–∞–Ω—Ç–∏–∫–æ–≤", cost: 100, icon: "üíé", chance: 35 },
      { name: "200 —Ñ–∞–Ω—Ç–∏–∫–æ–≤", cost: 200, icon: "üíé", chance: 20 },
      { name: "500 —Ñ–∞–Ω—Ç–∏–∫–æ–≤", cost: 500, icon: "üíé", chance: 5 },
    ]
  } else if (caseCost <= 500) {
    return [
      { name: "200 —Ñ–∞–Ω—Ç–∏–∫–æ–≤", cost: 200, icon: "üíé", chance: 30 },
      { name: "500 —Ñ–∞–Ω—Ç–∏–∫–æ–≤", cost: 500, icon: "üíé", chance: 35 },
      { name: "1000 —Ñ–∞–Ω—Ç–∏–∫–æ–≤", cost: 1000, icon: "üíé", chance: 25 },
      { name: "2500 —Ñ–∞–Ω—Ç–∏–∫–æ–≤", cost: 2500, icon: "üíé", chance: 10 },
    ]
  } else {
    return [
      { name: "1000 —Ñ–∞–Ω—Ç–∏–∫–æ–≤", cost: 1000, icon: "üíé", chance: 25 },
      { name: "2000 —Ñ–∞–Ω—Ç–∏–∫–æ–≤", cost: 2000, icon: "üíé", chance: 35 },
      { name: "5000 —Ñ–∞–Ω—Ç–∏–∫–æ–≤", cost: 5000, icon: "üíé", chance: 30 },
      { name: "10000 —Ñ–∞–Ω—Ç–∏–∫–æ–≤", cost: 10000, icon: "üíé", chance: 10 },
    ]
  }
}




.prize-winner,
.prize-highlight,
.prize-glow {
  box-shadow: none !important;
  animation: none !important;
  transform: none !important;
  background: inherit !important;
}

/* –£–±–∏—Ä–∞–µ–º –∑–æ–ª–æ—Ç–æ–µ —Å–≤–µ—á–µ–Ω–∏–µ */
@keyframes goldGlow {
  /* –ü—É—Å—Ç–∞—è –∞–Ω–∏–º–∞—Ü–∏—è —á—Ç–æ–±—ã –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å */
}

/* –£–±–∏—Ä–∞–µ–º –ø—É–ª—å—Å–∞—Ü–∏—é */
@keyframes prizePulse {
  /* –ü—É—Å—Ç–∞—è –∞–Ω–∏–º–∞—Ü–∏—è —á—Ç–æ–±—ã –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å */
}

/* –ë–∞–∑–æ–≤—ã–µ –ø–µ—Ä–µ—Ö–æ–¥—ã –¥–ª—è –ø—Ä–∏–∑–æ–≤ (–±–µ–∑ –ø–æ–¥—Å–≤–µ—á–∏–≤–∞–Ω–∏—è) */
#prizeScroll > div {
  transition: transform 0.3s ease;
  animation: none !important;
  box-shadow: none !important;
  border: 1px solid rgba(147, 51, 234, 0.3) !important;
}

#prizeScroll > div:hover {
  transform: none !important;
  box-shadow: none !important;
}

