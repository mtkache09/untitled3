const API_BASE = (() => {
  if (window.location.hostname === "mtkache09.github.io") {
    return "https://telegramcases-production.up.railway.app"
  }
  return "http://localhost:8000"
})()

const tg = window.Telegram?.WebApp

console.log("=== TELEGRAM WEB APP DEBUG ===")
console.log("Telegram WebApp –¥–æ—Å—Ç—É–ø–µ–Ω:", !!tg)
if (tg) {
  console.log("Init Data:", tg.initData)
  console.log("Init Data Unsafe:", tg.initDataUnsafe)
  console.log("User:", tg.initDataUnsafe?.user)
  console.log("Platform:", tg.platform)
  console.log("Version:", tg.version)
}

if (tg) {
  tg.ready()
  tg.expand()
  tg.MainButton.hide()
  tg.setHeaderColor("#1a1a2e")
  tg.setBackgroundColor("#16213e")
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let tonConnectUI = null
let walletData = null
let currentCase = null
let isSpinning = false
let userFantics = 0
let selectedDepositAmount = null

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã—Ö –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
function getAuthHeaders() {
  const headers = {
    Accept: "application/json",
    "Content-Type": "application/json",
  }

  // –ü–æ–ª—É—á–∞–µ–º initData –∏–∑ Telegram WebApp
  let initData = null

  if (window.Telegram?.WebApp?.initData) {
    initData = window.Telegram.WebApp.initData
    console.log("‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º Telegram WebApp initData")
    console.log("üì± Init Data –¥–ª–∏–Ω–∞:", initData.length)
    console.log("üì± Init Data preview:", initData.substring(0, 100) + "...")
  } else if (window.location.search.includes("initData=")) {
    // –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å initData —á–µ—Ä–µ–∑ URL
    const urlParams = new URLSearchParams(window.location.search)
    initData = urlParams.get("initData")
    console.log("‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º initData –∏–∑ URL –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤")
    console.log("üì± Init Data preview:", initData.substring(0, 100) + "...")
  }

  if (initData) {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç: Authorization: Bearer <initData>
    headers["Authorization"] = `Bearer ${initData}`
    console.log("üîê –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
  } else {
    console.warn("‚ö†Ô∏è Telegram WebApp initData –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
  }

  return headers
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
function isAuthAvailable() {
  return !!window.Telegram?.WebApp?.initData || window.location.search.includes("initData=")
}

// –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è User ID
const getUserId = () => {
  if (tg?.initDataUnsafe?.user?.id) {
    const userId = tg.initDataUnsafe.user.id
    console.log("‚úÖ Telegram User ID:", userId)
    return userId
  }

  // –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–∑ URL –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  if (window.location.search.includes("user_id=")) {
    const urlParams = new URLSearchParams(window.location.search)
    const userId = Number.parseInt(urlParams.get("user_id"))
    if (userId) {
      console.log("‚úÖ User ID –∏–∑ URL:", userId)
      return userId
    }
  }

  console.warn("‚ö†Ô∏è Telegram User ID –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π: 123456")
  return 123456
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ API
function handleApiError(response, error) {
  switch (response?.status) {
    case 401:
      showNotification("‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ Telegram", "error", 8000)
      console.error("401 Unauthorized:", error)
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
      if (error?.detail) {
        console.error("–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:", error.detail)
      }
      break
    case 403:
      showNotification("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω", "error", 5000)
      console.error("403 Forbidden:", error)
      break
    case 404:
      showNotification("‚ùå –†–µ—Å—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω", "error", 5000)
      console.error("404 Not Found:", error)
      break
    case 500:
      showNotification("‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞", "error", 5000)
      console.error("500 Internal Server Error:", error)
      break
    default:
      showNotification(`‚ùå –û—à–∏–±–∫–∞: ${error?.detail || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞"}`, "error", 5000)
      console.error("API Error:", response?.status, error)
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
function showNotification(message, type = "info", duration = 3000) {
  // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  const notification = document.createElement("div")
  notification.className = `fixed top-4 right-4 z-50 px-4 py-3 rounded-lg shadow-lg max-w-sm transform transition-all duration-300 translate-x-full`
  
  // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å—Ç–∏–ª–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
  switch (type) {
    case "success":
      notification.className += " bg-green-500 text-white"
      break
    case "error":
      notification.className += " bg-red-500 text-white"
      break
    case "warning":
      notification.className += " bg-yellow-500 text-white"
      break
    default:
      notification.className += " bg-blue-500 text-white"
  }
  
  notification.textContent = message
  document.body.appendChild(notification)
  
  // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
  setTimeout(() => {
    notification.classList.remove("translate-x-full")
  }, 100)
  
  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ
  setTimeout(() => {
    notification.classList.add("translate-x-full")
    setTimeout(() => {
      if (notification.parentNode) {
        notification.parentNode.removeChild(notification)
      }
    }, 300)
  }, duration)
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
function showConnectionStatus(message, isError = false) {
  const statusDiv = document.getElementById("connectionStatus")
  const statusText = document.getElementById("statusText")
  
  if (statusDiv && statusText) {
    statusDiv.classList.remove("hidden")
    statusText.textContent = message
    
    if (isError) {
      statusDiv.className = statusDiv.className.replace("bg-green-500", "bg-red-500")
      statusDiv.className = statusDiv.className.replace("bg-blue-500", "bg-red-500")
      if (!statusDiv.className.includes("bg-red-500")) {
        statusDiv.className += " bg-red-500"
      }
    } else {
      statusDiv.className = statusDiv.className.replace("bg-red-500", "bg-green-500")
      statusDiv.className = statusDiv.className.replace("bg-blue-500", "bg-green-500")
      if (!statusDiv.className.includes("bg-green-500")) {
        statusDiv.className += " bg-green-500"
      }
    }
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function fetchUserFantics() {
  try {
    console.log("üîÑ –ó–∞–ø—Ä–æ—Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    
    const userId = getUserId()
    const response = await fetch(`${API_BASE}/fantics/${userId}`, {
      headers: getAuthHeaders(),
    })
    
    if (response.ok) {
      const data = await response.json()
      userFantics = data.fantics || 0
      console.log("‚úÖ –ë–∞–ª–∞–Ω—Å –ø–æ–ª—É—á–µ–Ω:", userFantics)
      updateFanticsDisplay()
    } else {
      const errorData = await response.json().catch(() => ({ detail: "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞" }))
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞:", response.status, errorData)
      handleApiError(response, errorData)
    }
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞:", error)
    showNotification("‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞", "error", 5000)
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–µ–π—Å–æ–≤
async function fetchCases() {
  try {
    console.log("üîÑ –ó–∞–ø—Ä–æ—Å —Å–ø–∏—Å–∫–∞ –∫–µ–π—Å–æ–≤...")
    
    const response = await fetch(`${API_BASE}/cases`, {
      headers: getAuthHeaders(),
    })
    
    if (response.ok) {
      const data = await response.json()
      console.log("‚úÖ –ö–µ–π—Å—ã –ø–æ–ª—É—á–µ–Ω—ã:", data)
      renderCases(data)
    } else {
      const errorData = await response.json().catch(() => ({ detail: "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞" }))
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–µ–π—Å–æ–≤:", response.status, errorData)
      handleApiError(response, errorData)
    }
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–µ–π—Å–æ–≤:", error)
    showNotification("‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–µ–π—Å–æ–≤", "error", 5000)
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
async function testConnection() {
  try {
    console.log("üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º...")
    
    const response = await fetch(`${API_BASE}/`, {
      headers: getAuthHeaders(),
    })
    
    if (response.ok) {
      const data = await response.json()
      console.log("‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å —Å–µ—Ä–≤–µ—Ä–æ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ:", data)
      showConnectionStatus("‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å —Å–µ—Ä–≤–µ—Ä–æ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ", false)
    } else {
      console.error("‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º:", response.status)
      showConnectionStatus("‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º", true)
    }
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è:", error)
    showConnectionStatus("‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è", true)
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–µ–π—Å–∞ —á–µ—Ä–µ–∑ API
async function openCaseAPI(caseId) {
  try {
    console.log("üîÑ –û—Ç–∫—Ä—ã—Ç–∏–µ –∫–µ–π—Å–∞:", caseId)
    
    const response = await fetch(`${API_BASE}/open_case/${caseId}`, {
      method: "POST",
      headers: getAuthHeaders(),
    })
    
    if (response.ok) {
      const data = await response.json()
      console.log("‚úÖ –ö–µ–π—Å –æ—Ç–∫—Ä—ã—Ç:", data)
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      userFantics = (userFantics || 0) - data.spent + data.gift
      updateFanticsDisplay()
      
      return data
    } else {
      const errorData = await response.json().catch(() => ({ detail: "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞" }))
      console.error("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–µ–π—Å–∞:", response.status, errorData)
      handleApiError(response, errorData)
      return null
    }
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –∫–µ–π—Å–∞:", error)
    showNotification("‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –∫–µ–π—Å–∞", "error", 5000)
    return null
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–Ω—Ç–∏–∫–æ–≤
async function addFantics(amount) {
  try {
    console.log("üîÑ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–Ω—Ç–∏–∫–æ–≤:", amount)
    
    const userId = getUserId()
    const response = await fetch(`${API_BASE}/fantics/add`, {
      method: "POST",
      headers: getAuthHeaders(),
      body: JSON.stringify({ user_id: userId, amount }),
    })
    
    if (response.ok) {
      const data = await response.json()
      // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞
      if (data.fantics !== undefined) {
        userFantics = data.fantics
      } else {
        // –ï—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å, –¥–æ–±–∞–≤–ª—è–µ–º –∫ —Ç–µ–∫—É—â–µ–º—É
        userFantics = (userFantics || 0) + amount
      }
      console.log("‚úÖ –§–∞–Ω—Ç–∏–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã:", userFantics)
      updateFanticsDisplay()
      return true
    } else {
      const errorData = await response.json().catch(() => ({ detail: "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞" }))
      console.error("‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–Ω—Ç–∏–∫–æ–≤:", response.status, errorData)
      handleApiError(response, errorData)
      return false
    }
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ñ–∞–Ω—Ç–∏–∫–æ–≤:", error)
    showNotification("‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ñ–∞–Ω—Ç–∏–∫–æ–≤", "error", 5000)
    return false
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ñ–∞–Ω—Ç–∏–∫–æ–≤
function updateFanticsDisplay() {
  const userStarsElements = document.querySelectorAll("#userStars, #userStarsCase, #modalUserStars")
  userStarsElements.forEach((element) => {
    if (element) {
      element.textContent = userFantics
    }
  })
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏ –æ—Ç–∫—Ä—ã—Ç–∏—è
function updateOpenButton() {
  const openBtn = document.getElementById("openCaseBtn")
  const demoMode = document.getElementById("demoMode")
  const openBtnText = document.getElementById("openBtnText")
  
  if (!openBtn || !demoMode || !openBtnText) return
  
  if (demoMode.checked) {
    openBtn.disabled = false
    openBtnText.textContent = "–û—Ç–∫—Ä—ã—Ç—å –∫–µ–π—Å (–î–µ–º–æ)"
  } else {
    if (userFantics >= (currentCase?.cost || 0)) {
      openBtn.disabled = false
      openBtnText.textContent = `–û—Ç–∫—Ä—ã—Ç—å –∫–µ–π—Å (${currentCase?.cost || 0} üíé)`
    } else {
      openBtn.disabled = true
      openBtnText.textContent = "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ñ–∞–Ω—Ç–∏–∫–æ–≤"
    }
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –ø—Ä–∏–∑–æ–≤ –≤ —Å–∫—Ä–æ–ª–ª–µ
function renderPrizeScroll(caseData, winningGiftCost) {
  const prizeScroll = document.getElementById("prizeScroll")
  if (!prizeScroll || !caseData) return
  
  prizeScroll.innerHTML = ""
  
  // –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –ø—Ä–∏–∑–æ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const prizes = []
  
  // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–∑—ã –∏–∑ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø—Ä–∏–∑–æ–≤
  if (caseData.possible_prizes) {
    caseData.possible_prizes.forEach((prize) => {
      for (let i = 0; i < prize.chance; i++) {
        prizes.push(prize)
      }
    })
  }
  
  // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –ø—Ä–∏–∑—ã
  for (let i = prizes.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1))
    ;[prizes[i], prizes[j]] = [prizes[j], prizes[i]]
  }
  
  // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –ø—Ä–∏–∑–æ–≤
  prizes.forEach((prize) => {
    const prizeElement = document.createElement("div")
    prizeElement.className = "flex-shrink-0 w-32 h-32 bg-gradient-to-br from-purple-600 to-purple-800 rounded-lg flex flex-col items-center justify-center text-white shadow-lg border border-purple-500/30"
    
    const iconElement = document.createElement("div")
    iconElement.className = "text-3xl mb-2"
    iconElement.textContent = prize.icon || "üéÅ"
    
    const nameElement = document.createElement("div")
    nameElement.className = "text-sm font-semibold text-center"
    nameElement.textContent = prize.name
    
    const costElement = document.createElement("div")
    costElement.className = "text-xs text-purple-300"
    costElement.textContent = `${prize.cost} üíé`
    
    prizeElement.appendChild(iconElement)
    prizeElement.appendChild(nameElement)
    prizeElement.appendChild(costElement)
    
    prizeScroll.appendChild(prizeElement)
  })
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –∫–µ–π—Å–æ–≤
function renderCases(cases) {
  const casesGrid = document.getElementById("casesGrid")
  if (!casesGrid) return
  
  casesGrid.innerHTML = ""
  
  cases.forEach((caseData) => {
    const caseElement = document.createElement("div")
    caseElement.className = "bg-gradient-to-br from-purple-600 to-purple-800 rounded-lg p-4 text-white shadow-lg border border-purple-500/30 cursor-pointer hover:from-purple-700 hover:to-purple-900 transition-all"
    
    caseElement.innerHTML = `
      <div class="text-center">
        <div class="text-3xl mb-2">${caseData.icon || "üì¶"}</div>
        <h3 class="font-bold text-lg mb-2">${caseData.name}</h3>
        <p class="text-sm text-purple-200 mb-3">${caseData.description}</p>
        <div class="flex items-center justify-center gap-2">
          <span class="text-purple-300">${caseData.cost}</span>
          <span class="text-xl">üíé</span>
        </div>
      </div>
    `
    
    caseElement.addEventListener("click", () => openCasePage(caseData))
    casesGrid.appendChild(caseElement)
  })
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø—Ä–∏–∑–æ–≤
function renderPossiblePrizes(caseData) {
  const possiblePrizes = document.getElementById("possiblePrizes")
  if (!possiblePrizes || !caseData?.possible_prizes) return
  
  possiblePrizes.innerHTML = ""
  
  caseData.possible_prizes.forEach((prize) => {
    const prizeElement = document.createElement("div")
    prizeElement.className = "bg-gradient-to-br from-purple-600 to-purple-800 rounded-lg p-3 text-white text-center shadow-lg border border-purple-500/30"
    
    prizeElement.innerHTML = `
      <div class="text-2xl mb-1">${prize.icon || "üéÅ"}</div>
      <div class="text-xs font-semibold">${prize.name}</div>
      <div class="text-xs text-purple-300">${prize.cost} üíé</div>
    `
    
    possiblePrizes.appendChild(prizeElement)
  })
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
function renderDepositAmounts() {
  const depositAmounts = document.getElementById("depositAmounts")
  if (!depositAmounts) return
  
  const amounts = [100, 500, 1000, 2000, 5000, 10000]
  
  depositAmounts.innerHTML = ""
  
  amounts.forEach((amount) => {
    const amountElement = document.createElement("div")
    amountElement.className = "bg-gradient-to-br from-purple-600 to-purple-800 rounded-lg p-4 text-white text-center cursor-pointer hover:from-purple-700 hover:to-purple-900 transition-all border border-purple-500/30"
    
    amountElement.innerHTML = `
      <div class="text-2xl mb-1">üíé</div>
      <div class="font-bold text-lg">${amount}</div>
      <div class="text-xs text-purple-300">–§–∞–Ω—Ç–∏–∫–æ–≤</div>
    `
    
    amountElement.addEventListener("click", (event) => selectDepositAmount(amount, event))
    depositAmounts.appendChild(amountElement)
  })
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å—É–º–º—ã –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
function selectDepositAmount(amount, event) {
  selectedDepositAmount = amount
  
  // –£–±–∏—Ä–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Å–æ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
  document.querySelectorAll("#depositAmounts > div").forEach((el) => {
    el.classList.remove("selected-amount", "ring-2", "ring-purple-400")
  })
  
  // –î–æ–±–∞–≤–ª—è–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É
  if (event.target.closest("div")) {
    event.target.closest("div").classList.add("selected-amount", "ring-2", "ring-purple-400")
  }
  
  updateDepositButton()
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
function updateDepositButton() {
  const confirmBtn = document.getElementById("confirmDepositBtn")
  const depositBtnText = document.getElementById("depositBtnText")
  const customAmount = document.getElementById("customAmount")
  
  if (!confirmBtn || !depositBtnText) return
  
  const amount = selectedDepositAmount || (customAmount ? parseInt(customAmount.value) || 0 : 0)
  
  if (amount > 0) {
    confirmBtn.disabled = false
    depositBtnText.textContent = `–ü–æ–ø–æ–ª–Ω–∏—Ç—å –Ω–∞ ${amount} üíé`
  } else {
    confirmBtn.disabled = true
    depositBtnText.textContent = "–í—ã–±–µ—Ä–∏—Ç–µ —Å—É–º–º—É"
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
function openDepositModal() {
  document.getElementById("depositModal").classList.remove("hidden")
  document.getElementById("modalUserStars").textContent = userFantics
  renderDepositAmounts()
  updateDepositButton()
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
function closeDepositModal() {
  document.getElementById("depositModal").classList.add("hidden")
  selectedDepositAmount = null
  const customAmount = document.getElementById("customAmount")
  if (customAmount) {
    customAmount.value = ""
  }
  document.querySelectorAll("#depositAmounts > div").forEach((el) => {
    el.classList.remove("selected-amount", "ring-2", "ring-purple-400")
  })
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
async function processDeposit() {
  const amount = selectedDepositAmount || (document.getElementById("customAmount") ? parseInt(document.getElementById("customAmount").value) || 0 : 0)
  
  if (amount <= 0) {
    showNotification("–í—ã–±–µ—Ä–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è", "warning")
    return
  }
  
  const success = await addFantics(amount)
  if (success) {
    showNotification(`‚úÖ –ë–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ ${amount} —Ñ–∞–Ω—Ç–∏–∫–æ–≤!`, "success")
    closeDepositModal()
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–µ–π—Å–∞
function openCasePage(caseData) {
  currentCase = caseData
  document.getElementById("mainPage").classList.add("hidden")
  document.getElementById("casePage").classList.remove("hidden")
  
  document.getElementById("caseTitle").textContent = caseData.name
  document.getElementById("userStarsCase").textContent = userFantics
  
  renderPrizeScroll(caseData, 0)
  renderPossiblePrizes(caseData)
  updateOpenButton()
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –≤—Ä–∞—â–µ–Ω–∏—è –ø—Ä–∏–∑–æ–≤
async function spinPrizes() {
  if (isSpinning) return
  
  const openBtn = document.getElementById("openCaseBtn")
  const demoMode = document.getElementById("demoMode")
  
  if (!openBtn || !demoMode) return
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Ñ–∞–Ω—Ç–∏–∫–æ–≤ (–µ—Å–ª–∏ –Ω–µ –¥–µ–º–æ —Ä–µ–∂–∏–º)
  if (!demoMode.checked && userFantics < (currentCase?.cost || 0)) {
    showNotification("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ñ–∞–Ω—Ç–∏–∫–æ–≤ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–µ–π—Å–∞", "warning")
    return
  }
  
  isSpinning = true
  openBtn.disabled = true
  openBtn.classList.add("animate-pulse")
  
  try {
    // –û—Ç–∫—Ä—ã–≤–∞–µ–º –∫–µ–π—Å —á–µ—Ä–µ–∑ API
    const result = await openCaseAPI(currentCase.id)
    
    if (!result) {
      throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –∫–µ–π—Å")
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å
    userFantics = result.new_balance || userFantics
    updateFanticsDisplay()
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –≤—Ä–∞—â–µ–Ω–∏—è
    const prizeScroll = document.getElementById("prizeScroll")
    if (prizeScroll) {
      const scrollWidth = prizeScroll.scrollWidth
      const containerWidth = prizeScroll.parentElement.offsetWidth
      const centerPosition = scrollWidth / 2 - containerWidth / 2
      
      // –ù–∞—Ö–æ–¥–∏–º –≤—ã–∏–≥—Ä—ã—à–Ω—ã–π –ø—Ä–∏–∑
      const winningPrize = result.prize
      let targetPosition = centerPosition
      
      if (winningPrize) {
        // –ò—â–µ–º —ç–ª–µ–º–µ–Ω—Ç —Å –≤—ã–∏–≥—Ä—ã—à–Ω—ã–º –ø—Ä–∏–∑–æ–º
        const prizeElements = prizeScroll.children
        for (let i = 0; i < prizeElements.length; i++) {
          const prizeElement = prizeElements[i]
          const prizeName = prizeElement.querySelector("div:nth-child(2)")?.textContent
          if (prizeName === winningPrize.name) {
            targetPosition = centerPosition + (i * 128) // 128px - —à–∏—Ä–∏–Ω–∞ —ç–ª–µ–º–µ–Ω—Ç–∞ –ø—Ä–∏–∑–∞
            break
          }
        }
      }
      
      // –ê–Ω–∏–º–∞—Ü–∏—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
      const startTime = performance.now()
      const duration = 3000
      const startPosition = prizeScroll.scrollLeft
      
      const animateScroll = (currentTime) => {
        const elapsed = currentTime - startTime
        const progress = Math.min(elapsed / duration, 1)
        
        // –§—É–Ω–∫—Ü–∏—è –ø–ª–∞–≤–Ω–æ—Å—Ç–∏ (ease-out)
        const easeOut = 1 - Math.pow(1 - progress, 3)
        
        prizeScroll.scrollLeft = startPosition + (targetPosition - startPosition) * easeOut
        
        if (progress < 1) {
          requestAnimationFrame(animateScroll)
        } else {
          // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
          setTimeout(() => {
            showNotification(
              `üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${winningPrize?.name || "–ø—Ä–∏–∑"}!`,
              "success",
              5000
            )
            
            // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            openBtn.disabled = false
            openBtn.classList.remove("animate-pulse")
            updateOpenButton()
            isSpinning = false
          }, 500)
        }
      }
      
      requestAnimationFrame(animateScroll)
    }
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –∫–µ–π—Å–∞:", error)
    showNotification("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –∫–µ–π—Å–∞", "error")
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    openBtn.disabled = false
    openBtn.classList.remove("animate-pulse")
    updateOpenButton()
    isSpinning = false
  }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è TON Connect UI
async function initTonConnect() {
  try {
    console.log("üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è TON Connect UI...")
    
    // –°–æ–∑–¥–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π URL –¥–ª—è manifest
    const manifestBlob = new Blob([JSON.stringify({
      "url": window.location.origin,
      "name": "Fantics Casino - Telegram Mini App",
      "iconUrl": "https://ton.org/download/ton_symbol.png",
      "termsOfUseUrl": window.location.origin,
      "privacyPolicyUrl": window.location.origin,
      "features": ["ton_addr", "ton_proof"],
      "items": [
        {
          "name": "ton_addr",
          "description": "Request wallet address"
        },
        {
          "name": "ton_proof",
          "description": "Request TON proof for authentication"
        }
      ]
    })], { type: 'application/json' });
    
    const manifestUrl = URL.createObjectURL(manifestBlob);
    console.log("–°–æ–∑–¥–∞–Ω –ª–æ–∫–∞–ª—å–Ω—ã–π manifest URL:", manifestUrl)
    
    tonConnectUI = new TON_CONNECT_UI.TonConnectUI({
      manifestUrl: manifestUrl,
      buttonRootId: "ton-connect-ui"
    })
    
    // –°–ª—É—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∫–æ—à–µ–ª—å–∫–∞
    tonConnectUI.onStatusChange(wallet => {
          console.log("–°—Ç–∞—Ç—É—Å –∫–æ—à–µ–ª—å–∫–∞ –∏–∑–º–µ–Ω–∏–ª—Å—è:", wallet)
    if (wallet && wallet.account) {
      console.log("‚úÖ –ö–æ—à–µ–ª–µ–∫ –ø–æ–¥–∫–ª—é—á–µ–Ω:", {
        address: wallet.account.address,
        chain: wallet.account.chain,
        publicKey: wallet.account.publicKey,
        hasProof: !!wallet.proof
      })
      processWalletConnection(wallet)
    } else {
        // –ö–æ—à–µ–ª–µ–∫ –æ—Ç–∫–ª—é—á–µ–Ω
        walletData = null
        const connectBtn = document.getElementById("connectTonWalletBtn")
        if (connectBtn) {
          connectBtn.disabled = false
          connectBtn.innerHTML = `
            <svg class="w-5 h-5 mr-2 inline" viewBox="0 0 24 24" fill="none" stroke="currentColor">
              <path d="M12 2C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10S17.523 2 12 2z"></path>
              <path d="M12 6v6l4 2"></path>
            </svg>
            –ü–æ–¥–∫–ª—é—á–∏—Ç—å TON –ö–æ—à–µ–ª–µ–∫
          `
        }
        showNotification("‚ö†Ô∏è TON –∫–æ—à–µ–ª–µ–∫ –æ—Ç–∫–ª—é—á–µ–Ω", "info", 3000)
      }
    })
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–¥–∫–ª—é—á–µ–Ω –ª–∏ –∫–æ—à–µ–ª–µ–∫
    const wallet = tonConnectUI.wallet
    if (wallet && wallet.account) {
      console.log("üîÑ –ö–æ—à–µ–ª–µ–∫ —É–∂–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏")
      processWalletConnection(wallet)
    }
    
    console.log("‚úÖ TON Connect UI –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º URL –¥–ª—è –æ—á–∏—Å—Ç–∫–∏
    window.manifestUrl = manifestUrl
    
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ TON Connect:", error)
    showNotification(`‚ùå –û—à–∏–±–∫–∞ TON Connect: ${error.message}`, "error", 5000)
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫–æ—à–µ–ª—å–∫–∞
async function processWalletConnection(wallet) {
  try {
    if (!wallet.account) {
      throw new Error("–ê–∫–∫–∞—É–Ω—Ç –∫–æ—à–µ–ª—å–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
    }
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ, –∫–æ—Ç–æ—Ä—ã–π –æ–∂–∏–¥–∞–µ—Ç –±—ç–∫–µ–Ω–¥
    walletData = {
      wallet_address: wallet.account.address,
      user_id: getUserId(),
      network: wallet.account.chain.toString(), // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Å—Ç—Ä–æ–∫—É
      public_key: wallet.account.publicKey
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º proof –¥–∞–Ω–Ω—ã–µ, –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã
    if (wallet.proof) {
      console.log("üîê TON Proof –ø–æ–ª—É—á–µ–Ω:", wallet.proof)
      walletData.proof = {
        timestamp: wallet.proof.timestamp,
        domain: {
          lengthBytes: wallet.proof.domain.lengthBytes,
          value: wallet.proof.domain.value
        },
        signature: wallet.proof.signature,
        payload: wallet.proof.payload,
        pubkey: wallet.proof.pubkey || wallet.account.publicKey
      }
    } else {
      console.log("‚ö†Ô∏è TON Proof –Ω–µ –ø–æ–ª—É—á–µ–Ω")
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É
    const connectBtn = document.getElementById("connectTonWalletBtn")
    if (connectBtn) {
      connectBtn.disabled = true
      connectBtn.innerHTML = `
        <svg class="w-5 h-5 mr-2 inline" viewBox="0 0 24 24" fill="none" stroke="currentColor">
          <path d="M12 2C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10S17.523 2 12 2z"></path>
          <path d="M12 6v6l4 2"></path>
        </svg>
        ‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω
      `
    }
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    await sendWalletToBackend()
    
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫–æ—à–µ–ª—å–∫–∞:", error)
    showNotification(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫–æ—à–µ–ª—å–∫–∞: ${error.message}`, "error", 5000)
  }
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∫–æ—à–µ–ª—å–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
async function sendWalletToBackend() {
  if (!walletData) {
    showNotification("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∫–æ—à–µ–ª—å–∫–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏", "warning")
    return
  }
  
  try {
    console.log("üîÑ –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∫–æ—à–µ–ª—å–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä...")
    console.log("üì§ –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏:", JSON.stringify(walletData, null, 2))
    
    const headers = {
      ...getAuthHeaders(),
      "Content-Type": "application/json"
    }
    console.log("üì§ –ó–∞–≥–æ–ª–æ–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞:", headers)
    
    const response = await fetch(`${API_BASE}/ton/connect`, {
      method: "POST",
      headers: headers,
      body: JSON.stringify(walletData)
    })
    
    if (response.ok) {
      const data = await response.json()
      console.log("‚úÖ –î–∞–Ω–Ω—ã–µ –∫–æ—à–µ–ª—å–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ:", data)
      showNotification("‚úÖ TON –∫–æ—à–µ–ª–µ–∫ –ø–æ–¥–∫–ª—é—á–µ–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!", "success", 3000)
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω–æ–º –∫–æ—à–µ–ª—å–∫–µ
      const connectBtn = document.getElementById("connectTonWalletBtn")
      if (connectBtn) {
        connectBtn.innerHTML = `
          <svg class="w-5 h-5 mr-2 inline" viewBox="0 0 24 24" fill="none" stroke="currentColor">
            <path d="M12 2C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10S17.523 2 12 2z"></path>
            <path d="M12 6v6l4 2"></path>
          </svg>
          ‚úÖ ${walletData.wallet_address.substring(0, 6)}...${walletData.wallet_address.substring(walletData.wallet_address.length - 4)}
        `
      }
    } else {
      const errorData = await response.json().catch(() => ({ detail: "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞" }))
      console.error("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∫–æ—à–µ–ª—å–∫–∞:", response.status, errorData)
      showNotification(
        `‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ—à–µ–ª—å–∫–∞: ${errorData.detail || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞"}`,
        "error",
        5000
      )
      
      // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ —Å–≤—è–∑–∞–Ω–∞ —Å TON Proof, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –±–µ–∑ –Ω–µ–≥–æ
      if (errorData.detail && errorData.detail.includes("TON Proof")) {
        console.log("‚ö†Ô∏è TON Proof –Ω–µ –ø—Ä–æ—à–µ–ª –ø—Ä–æ–≤–µ—Ä–∫—É, –ø–æ–ø—Ä–æ–±—É–µ–º –ø–æ–¥–∫–ª—é—á–∏—Ç—å –±–µ–∑ –Ω–µ–≥–æ")
        // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–∏ –±–µ–∑ proof
      }
    }
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö –∫–æ—à–µ–ª—å–∫–∞:", error)
    showNotification("‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∫–æ—à–µ–ª—å–∫–∞", "error", 5000)
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞–∑–∞–¥
function goBack() {
  document.getElementById("casePage").classList.add("hidden")
  document.getElementById("mainPage").classList.remove("hidden")
  currentCase = null
}

// Event listeners
document.getElementById("backBtn").addEventListener("click", goBack)
document.getElementById("openCaseBtn").addEventListener("click", spinPrizes)
document.getElementById("demoMode").addEventListener("change", updateOpenButton)

// Deposit modal event listeners
document.getElementById("depositBtn").addEventListener("click", openDepositModal)
document.getElementById("closeDepositModal").addEventListener("click", closeDepositModal)
document.getElementById("confirmDepositBtn").addEventListener("click", processDeposit)

document.getElementById("customAmount").addEventListener("input", () => {
  selectedDepositAmount = null
  document.querySelectorAll("#depositAmounts > div").forEach((el) => {
    el.classList.remove("selected-amount", "ring-2", "ring-purple-400")
  })
  updateDepositButton()
})

document.getElementById("depositModal").addEventListener("click", (e) => {
  if (e.target.id === "depositModal") {
    closeDepositModal()
  }
})

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ä–µ—Å—É—Ä—Å–æ–≤
function cleanup() {
  if (window.manifestUrl) {
    URL.revokeObjectURL(window.manifestUrl)
    console.log("üßπ Manifest URL –æ—á–∏—â–µ–Ω")
  }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
async function initApp() {
  console.log("DEBUG: –ù–∞—á–∞–ª–æ initApp")
  console.log("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
  console.log("API URL:", API_BASE)
  console.log("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞:", isAuthAvailable() ? "‚úÖ –î–∞" : "‚ùå –ù–µ—Ç")
  
  if (window.Telegram?.WebApp?.initData) {
    console.log("üì± Init Data –¥–ª–∏–Ω–∞:", window.Telegram.WebApp.initData.length)
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–∏–º–≤–æ–ª—ã –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    const initData = window.Telegram.WebApp.initData
    console.log("üì± Init Data preview:", initData.substring(0, 50) + "..." + initData.substring(initData.length - 50))
  }
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –µ—Å–ª–∏ –Ω–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  if (!isAuthAvailable()) {
    showNotification("‚ö†Ô∏è –î–ª—è –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –æ—Ç–∫—Ä–æ–π—Ç–µ –≤ Telegram", "info", 8000)
  }
  
  // –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
  if (window.location.search.includes("debug=true")) {
    await testConnection()
  }
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º TON Connect
  await initTonConnect()
  
  await fetchUserFantics()
  await fetchCases()
  
  console.log("‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ!")
  console.log("DEBUG: –ö–æ–Ω–µ—Ü initApp")
}

initApp()

// –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
window.addEventListener('beforeunload', cleanup)
